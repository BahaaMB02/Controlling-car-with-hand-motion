
TEST DC MOTORS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000031e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000372  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000372  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  000003e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000cbf  00000000  00000000  00000470  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006f9  00000000  00000000  0000112f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005be  00000000  00000000  00001828  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  00001de8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004da  00000000  00000000  00001ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000450  00000000  00000000  00002396  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000027e6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 7f 01 	call	0x2fe	; 0x2fe <main>
  64:	0c 94 8d 01 	jmp	0x31a	; 0x31a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DcMotor_Initialization>:
#include "DCMotor_Private.h"


void DcMotor_Initialization(void)
{
	DIO_SetPin_Direction(Motor_CNTRL_PRT, Motor_EN1, Motor_OUTPUT);
  6c:	41 e0       	ldi	r20, 0x01	; 1
  6e:	63 e0       	ldi	r22, 0x03	; 3
  70:	81 e0       	ldi	r24, 0x01	; 1
  72:	0e 94 9d 00 	call	0x13a	; 0x13a <DIO_SetPin_Direction>
	DIO_SetPin_Direction(Motor_CNTRL_PRT, Motor_EN2, Motor_OUTPUT);
  76:	41 e0       	ldi	r20, 0x01	; 1
  78:	63 e0       	ldi	r22, 0x03	; 3
  7a:	81 e0       	ldi	r24, 0x01	; 1
  7c:	0e 94 9d 00 	call	0x13a	; 0x13a <DIO_SetPin_Direction>
	
	DIO_SetPin_Direction(Motor_DATA_PRT, Motor_A1, Motor_OUTPUT);
  80:	41 e0       	ldi	r20, 0x01	; 1
  82:	63 e0       	ldi	r22, 0x03	; 3
  84:	82 e0       	ldi	r24, 0x02	; 2
  86:	0e 94 9d 00 	call	0x13a	; 0x13a <DIO_SetPin_Direction>
	DIO_SetPin_Direction(Motor_DATA_PRT, Motor_A2, Motor_OUTPUT);
  8a:	41 e0       	ldi	r20, 0x01	; 1
  8c:	64 e0       	ldi	r22, 0x04	; 4
  8e:	82 e0       	ldi	r24, 0x02	; 2
  90:	0e 94 9d 00 	call	0x13a	; 0x13a <DIO_SetPin_Direction>
	DIO_SetPin_Direction(Motor_DATA_PRT, Motor_B1, Motor_OUTPUT);
  94:	41 e0       	ldi	r20, 0x01	; 1
  96:	65 e0       	ldi	r22, 0x05	; 5
  98:	82 e0       	ldi	r24, 0x02	; 2
  9a:	0e 94 9d 00 	call	0x13a	; 0x13a <DIO_SetPin_Direction>
	DIO_SetPin_Direction(Motor_DATA_PRT, Motor_B2, Motor_OUTPUT);
  9e:	41 e0       	ldi	r20, 0x01	; 1
  a0:	66 e0       	ldi	r22, 0x06	; 6
  a2:	82 e0       	ldi	r24, 0x02	; 2
  a4:	0e 94 9d 00 	call	0x13a	; 0x13a <DIO_SetPin_Direction>
  a8:	08 95       	ret

000000aa <DCMotor_Rotate>:
}
void DCMotor_Rotate(Motor motor, Motor_Direction direction)
{
  aa:	cf 93       	push	r28
  ac:	c6 2f       	mov	r28, r22
	switch(motor)
  ae:	88 23       	and	r24, r24
  b0:	19 f0       	breq	.+6      	; 0xb8 <DCMotor_Rotate+0xe>
  b2:	81 30       	cpi	r24, 0x01	; 1
  b4:	09 f1       	breq	.+66     	; 0xf8 <DCMotor_Rotate+0x4e>
  b6:	3f c0       	rjmp	.+126    	; 0x136 <DCMotor_Rotate+0x8c>
	{
		case Motor_0:
		DIO_SetPin_Value(Motor_CNTRL_PRT, Motor_EN1, Motor_HIGH);
  b8:	41 e0       	ldi	r20, 0x01	; 1
  ba:	63 e0       	ldi	r22, 0x03	; 3
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
		switch(direction)
  c2:	cc 23       	and	r28, r28
  c4:	19 f0       	breq	.+6      	; 0xcc <DCMotor_Rotate+0x22>
  c6:	c1 30       	cpi	r28, 0x01	; 1
  c8:	61 f0       	breq	.+24     	; 0xe2 <DCMotor_Rotate+0x38>
  ca:	35 c0       	rjmp	.+106    	; 0x136 <DCMotor_Rotate+0x8c>
		{
			case Motor_CW:
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_A1, Motor_HIGH);
  cc:	41 e0       	ldi	r20, 0x01	; 1
  ce:	63 e0       	ldi	r22, 0x03	; 3
  d0:	82 e0       	ldi	r24, 0x02	; 2
  d2:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_A2, Motor_LOW);
  d6:	40 e0       	ldi	r20, 0x00	; 0
  d8:	64 e0       	ldi	r22, 0x04	; 4
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			break;
  e0:	2a c0       	rjmp	.+84     	; 0x136 <DCMotor_Rotate+0x8c>
			case Motor_CCW:
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_A1, Motor_LOW);
  e2:	40 e0       	ldi	r20, 0x00	; 0
  e4:	63 e0       	ldi	r22, 0x03	; 3
  e6:	82 e0       	ldi	r24, 0x02	; 2
  e8:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_A2, Motor_HIGH);
  ec:	41 e0       	ldi	r20, 0x01	; 1
  ee:	64 e0       	ldi	r22, 0x04	; 4
  f0:	82 e0       	ldi	r24, 0x02	; 2
  f2:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			break;
  f6:	1f c0       	rjmp	.+62     	; 0x136 <DCMotor_Rotate+0x8c>
		}
		break;
		case Motor_1:
		DIO_SetPin_Value(Motor_CNTRL_PRT, Motor_EN2, Motor_HIGH);
  f8:	41 e0       	ldi	r20, 0x01	; 1
  fa:	63 e0       	ldi	r22, 0x03	; 3
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
		switch(direction)
 102:	cc 23       	and	r28, r28
 104:	19 f0       	breq	.+6      	; 0x10c <DCMotor_Rotate+0x62>
 106:	c1 30       	cpi	r28, 0x01	; 1
 108:	61 f0       	breq	.+24     	; 0x122 <DCMotor_Rotate+0x78>
 10a:	15 c0       	rjmp	.+42     	; 0x136 <DCMotor_Rotate+0x8c>
		{
			case Motor_CW:
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_B1, Motor_HIGH);
 10c:	41 e0       	ldi	r20, 0x01	; 1
 10e:	65 e0       	ldi	r22, 0x05	; 5
 110:	82 e0       	ldi	r24, 0x02	; 2
 112:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_B2, Motor_LOW);
 116:	40 e0       	ldi	r20, 0x00	; 0
 118:	66 e0       	ldi	r22, 0x06	; 6
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			break;
 120:	0a c0       	rjmp	.+20     	; 0x136 <DCMotor_Rotate+0x8c>
			case Motor_CCW:
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_B1, Motor_LOW);
 122:	40 e0       	ldi	r20, 0x00	; 0
 124:	65 e0       	ldi	r22, 0x05	; 5
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			DIO_SetPin_Value(Motor_DATA_PRT, Motor_B2, Motor_HIGH);
 12c:	41 e0       	ldi	r20, 0x01	; 1
 12e:	66 e0       	ldi	r22, 0x06	; 6
 130:	82 e0       	ldi	r24, 0x02	; 2
 132:	0e 94 0e 01 	call	0x21c	; 0x21c <DIO_SetPin_Value>
			break;
		}
		break;
	}
}
 136:	cf 91       	pop	r28
 138:	08 95       	ret

0000013a <DIO_SetPin_Direction>:
#include "DIO_Private.h"


void DIO_SetPin_Direction(DIO_Port port, DIO_Pin pin, DIO_State state)
{
	switch(state)
 13a:	44 23       	and	r20, r20
 13c:	19 f0       	breq	.+6      	; 0x144 <DIO_SetPin_Direction+0xa>
 13e:	41 30       	cpi	r20, 0x01	; 1
 140:	c9 f1       	breq	.+114    	; 0x1b4 <DIO_SetPin_Direction+0x7a>
 142:	08 95       	ret
	{
		case DIO_INPUT:
		switch (port)
 144:	81 30       	cpi	r24, 0x01	; 1
 146:	91 f0       	breq	.+36     	; 0x16c <DIO_SetPin_Direction+0x32>
 148:	28 f0       	brcs	.+10     	; 0x154 <DIO_SetPin_Direction+0x1a>
 14a:	82 30       	cpi	r24, 0x02	; 2
 14c:	d9 f0       	breq	.+54     	; 0x184 <DIO_SetPin_Direction+0x4a>
 14e:	83 30       	cpi	r24, 0x03	; 3
 150:	29 f1       	breq	.+74     	; 0x19c <DIO_SetPin_Direction+0x62>
 152:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(DDRA, pin);
 154:	2a b3       	in	r18, 0x1a	; 26
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_SetPin_Direction+0x26>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_SetPin_Direction+0x22>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	8a bb       	out	0x1a, r24	; 26
			break;
 16a:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(DDRB, pin);
 16c:	27 b3       	in	r18, 0x17	; 23
 16e:	81 e0       	ldi	r24, 0x01	; 1
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_SetPin_Direction+0x3e>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	6a 95       	dec	r22
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_SetPin_Direction+0x3a>
 17c:	80 95       	com	r24
 17e:	82 23       	and	r24, r18
 180:	87 bb       	out	0x17, r24	; 23
			break;
 182:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(DDRC, pin);
 184:	24 b3       	in	r18, 0x14	; 20
 186:	81 e0       	ldi	r24, 0x01	; 1
 188:	90 e0       	ldi	r25, 0x00	; 0
 18a:	02 c0       	rjmp	.+4      	; 0x190 <DIO_SetPin_Direction+0x56>
 18c:	88 0f       	add	r24, r24
 18e:	99 1f       	adc	r25, r25
 190:	6a 95       	dec	r22
 192:	e2 f7       	brpl	.-8      	; 0x18c <DIO_SetPin_Direction+0x52>
 194:	80 95       	com	r24
 196:	82 23       	and	r24, r18
 198:	84 bb       	out	0x14, r24	; 20
			break;
 19a:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(DDRD, pin);
 19c:	21 b3       	in	r18, 0x11	; 17
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 c0       	rjmp	.+4      	; 0x1a8 <DIO_SetPin_Direction+0x6e>
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	6a 95       	dec	r22
 1aa:	e2 f7       	brpl	.-8      	; 0x1a4 <DIO_SetPin_Direction+0x6a>
 1ac:	80 95       	com	r24
 1ae:	82 23       	and	r24, r18
 1b0:	81 bb       	out	0x11, r24	; 17
			break;
 1b2:	08 95       	ret
		}
		break;
		case DIO_OUTPUT:
		switch (port)
 1b4:	81 30       	cpi	r24, 0x01	; 1
 1b6:	89 f0       	breq	.+34     	; 0x1da <DIO_SetPin_Direction+0xa0>
 1b8:	28 f0       	brcs	.+10     	; 0x1c4 <DIO_SetPin_Direction+0x8a>
 1ba:	82 30       	cpi	r24, 0x02	; 2
 1bc:	c9 f0       	breq	.+50     	; 0x1f0 <DIO_SetPin_Direction+0xb6>
 1be:	83 30       	cpi	r24, 0x03	; 3
 1c0:	11 f1       	breq	.+68     	; 0x206 <DIO_SetPin_Direction+0xcc>
 1c2:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(DDRA, pin);
 1c4:	2a b3       	in	r18, 0x1a	; 26
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <DIO_SetPin_Direction+0x96>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <DIO_SetPin_Direction+0x92>
 1d4:	82 2b       	or	r24, r18
 1d6:	8a bb       	out	0x1a, r24	; 26
			break;
 1d8:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(DDRB, pin);
 1da:	27 b3       	in	r18, 0x17	; 23
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_SetPin_Direction+0xac>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	6a 95       	dec	r22
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_SetPin_Direction+0xa8>
 1ea:	82 2b       	or	r24, r18
 1ec:	87 bb       	out	0x17, r24	; 23
			break;
 1ee:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(DDRC, pin);
 1f0:	24 b3       	in	r18, 0x14	; 20
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	02 c0       	rjmp	.+4      	; 0x1fc <DIO_SetPin_Direction+0xc2>
 1f8:	88 0f       	add	r24, r24
 1fa:	99 1f       	adc	r25, r25
 1fc:	6a 95       	dec	r22
 1fe:	e2 f7       	brpl	.-8      	; 0x1f8 <DIO_SetPin_Direction+0xbe>
 200:	82 2b       	or	r24, r18
 202:	84 bb       	out	0x14, r24	; 20
			break;
 204:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(DDRD, pin);
 206:	21 b3       	in	r18, 0x11	; 17
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_SetPin_Direction+0xd8>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	6a 95       	dec	r22
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_SetPin_Direction+0xd4>
 216:	82 2b       	or	r24, r18
 218:	81 bb       	out	0x11, r24	; 17
 21a:	08 95       	ret

0000021c <DIO_SetPin_Value>:
		break;
	}
}
void DIO_SetPin_Value(DIO_Port port, DIO_Pin pin, DIO_Status status)
{
	switch(status)
 21c:	44 23       	and	r20, r20
 21e:	19 f0       	breq	.+6      	; 0x226 <DIO_SetPin_Value+0xa>
 220:	41 30       	cpi	r20, 0x01	; 1
 222:	c9 f1       	breq	.+114    	; 0x296 <DIO_SetPin_Value+0x7a>
 224:	08 95       	ret
	{
		case DIO_LOW:
		switch (port)
 226:	81 30       	cpi	r24, 0x01	; 1
 228:	91 f0       	breq	.+36     	; 0x24e <DIO_SetPin_Value+0x32>
 22a:	28 f0       	brcs	.+10     	; 0x236 <DIO_SetPin_Value+0x1a>
 22c:	82 30       	cpi	r24, 0x02	; 2
 22e:	d9 f0       	breq	.+54     	; 0x266 <DIO_SetPin_Value+0x4a>
 230:	83 30       	cpi	r24, 0x03	; 3
 232:	29 f1       	breq	.+74     	; 0x27e <DIO_SetPin_Value+0x62>
 234:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(PORTA, pin);
 236:	2b b3       	in	r18, 0x1b	; 27
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_SetPin_Value+0x26>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	6a 95       	dec	r22
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_SetPin_Value+0x22>
 246:	80 95       	com	r24
 248:	82 23       	and	r24, r18
 24a:	8b bb       	out	0x1b, r24	; 27
			break;
 24c:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(PORTB, pin);
 24e:	28 b3       	in	r18, 0x18	; 24
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 c0       	rjmp	.+4      	; 0x25a <DIO_SetPin_Value+0x3e>
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	6a 95       	dec	r22
 25c:	e2 f7       	brpl	.-8      	; 0x256 <DIO_SetPin_Value+0x3a>
 25e:	80 95       	com	r24
 260:	82 23       	and	r24, r18
 262:	88 bb       	out	0x18, r24	; 24
			break;
 264:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(PORTC, pin);
 266:	25 b3       	in	r18, 0x15	; 21
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 c0       	rjmp	.+4      	; 0x272 <DIO_SetPin_Value+0x56>
 26e:	88 0f       	add	r24, r24
 270:	99 1f       	adc	r25, r25
 272:	6a 95       	dec	r22
 274:	e2 f7       	brpl	.-8      	; 0x26e <DIO_SetPin_Value+0x52>
 276:	80 95       	com	r24
 278:	82 23       	and	r24, r18
 27a:	85 bb       	out	0x15, r24	; 21
			break;
 27c:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(PORTD, pin);
 27e:	22 b3       	in	r18, 0x12	; 18
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_SetPin_Value+0x6e>
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	6a 95       	dec	r22
 28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_SetPin_Value+0x6a>
 28e:	80 95       	com	r24
 290:	82 23       	and	r24, r18
 292:	82 bb       	out	0x12, r24	; 18
			break;
 294:	08 95       	ret
		}
		break;
		case DIO_HIGH:
		switch (port)
 296:	81 30       	cpi	r24, 0x01	; 1
 298:	89 f0       	breq	.+34     	; 0x2bc <DIO_SetPin_Value+0xa0>
 29a:	28 f0       	brcs	.+10     	; 0x2a6 <DIO_SetPin_Value+0x8a>
 29c:	82 30       	cpi	r24, 0x02	; 2
 29e:	c9 f0       	breq	.+50     	; 0x2d2 <DIO_SetPin_Value+0xb6>
 2a0:	83 30       	cpi	r24, 0x03	; 3
 2a2:	11 f1       	breq	.+68     	; 0x2e8 <DIO_SetPin_Value+0xcc>
 2a4:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(PORTA, pin);
 2a6:	2b b3       	in	r18, 0x1b	; 27
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_SetPin_Value+0x96>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	6a 95       	dec	r22
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_SetPin_Value+0x92>
 2b6:	82 2b       	or	r24, r18
 2b8:	8b bb       	out	0x1b, r24	; 27
			break;
 2ba:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(PORTB, pin);
 2bc:	28 b3       	in	r18, 0x18	; 24
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_SetPin_Value+0xac>
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	6a 95       	dec	r22
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_SetPin_Value+0xa8>
 2cc:	82 2b       	or	r24, r18
 2ce:	88 bb       	out	0x18, r24	; 24
			break;
 2d0:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(PORTC, pin);
 2d2:	25 b3       	in	r18, 0x15	; 21
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <DIO_SetPin_Value+0xc2>
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	6a 95       	dec	r22
 2e0:	e2 f7       	brpl	.-8      	; 0x2da <DIO_SetPin_Value+0xbe>
 2e2:	82 2b       	or	r24, r18
 2e4:	85 bb       	out	0x15, r24	; 21
			break;
 2e6:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(PORTD, pin);
 2e8:	22 b3       	in	r18, 0x12	; 18
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <DIO_SetPin_Value+0xd8>
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	6a 95       	dec	r22
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <DIO_SetPin_Value+0xd4>
 2f8:	82 2b       	or	r24, r18
 2fa:	82 bb       	out	0x12, r24	; 18
 2fc:	08 95       	ret

000002fe <main>:

	
int main(void)
{
	
		DcMotor_Initialization();
 2fe:	0e 94 36 00 	call	0x6c	; 0x6c <DcMotor_Initialization>
/*
		Timer0_Fast_PWM_Initialize();
		Timer0_Fast_PWM_Start();*/
	
	DDRB |= (1<<PB3);
 302:	87 b3       	in	r24, 0x17	; 23
 304:	88 60       	ori	r24, 0x08	; 8
 306:	87 bb       	out	0x17, r24	; 23


 
    while (1) 
    {
		DCMotor_Rotate(Motor_0,Motor_CW);
 308:	60 e0       	ldi	r22, 0x00	; 0
 30a:	80 e0       	ldi	r24, 0x00	; 0
 30c:	0e 94 55 00 	call	0xaa	; 0xaa <DCMotor_Rotate>
		
		
		DCMotor_Rotate(Motor_1,Motor_CCW);
 310:	61 e0       	ldi	r22, 0x01	; 1
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	0e 94 55 00 	call	0xaa	; 0xaa <DCMotor_Rotate>
 318:	f7 cf       	rjmp	.-18     	; 0x308 <main+0xa>

0000031a <_exit>:
 31a:	f8 94       	cli

0000031c <__stop_program>:
 31c:	ff cf       	rjmp	.-2      	; 0x31c <__stop_program>
